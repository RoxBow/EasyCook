const express = require('express');
const goodDealRouter = express.Router({ mergeParams: true });
const GoodDeal = require('../../models/GoodDeal');
const Image = require('../../models/Image');
const fs = require('fs');
const multer = require('multer');
const { getExtFromMime, randomId } = require('../../helpers.js');

const storage = multer.diskStorage({
  destination: './assets/avatars/goodDeals/',
  filename: (req, file, cb) => {
    const extension = getExtFromMime(file.mimetype);
    const id = randomId();

    cb(null, id + '.' + extension);
  }
});

const upload = multer({
  storage
});

class GoodDealRouterClass {
  routes() {
    const populateFields = [
      { path: 'interested', populate: { path: 'avatar' } },
      { path: 'creator', populate: { path: 'avatar' } },
      'image'
    ];

    goodDealRouter.get('/', (req, res) => {
      GoodDeal.find({})
        .populate(populateFields)
        .exec((err, events) => {
          res.status(200).send({ events });
        });
    });

    goodDealRouter.put('/add', upload.single('file'), (req, res) => {
      const { storeName, date, address, description } = req.body;

      //below code will read the data from the upload folder. Multer     will automatically upload the file in that folder with an  autogenerated name
      // fs.readFile(req.file.path, (err, contents) => {
      //   if (err) {
      //     console.log('Error: ', err);
      //   } else {
      //     console.log('File contents ', contents);
      //   }
      // });

      const avatar = new Image({
        uri: (req.file && req.file.path) || 'assets/avatars/goodDeals/goodDeal_default.jpg'
      });

      avatar.save();

      const goodDealAdded = new GoodDeal({
        storeName,
        date,
        address,
        description,
        creator: req.user._id,
        image: avatar
      });

      goodDealAdded.save((err, goodDeal) => {
        if (err) {
          console.log('err', err);
          return res.status(400).send({ status: 'FAILURE', errorMessage: err });
        }

        goodDeal.populate(['creator', 'image'], (err, goodDealAdded) => {
          if (err) {
            console.log(err);
            return res.status(400).send({ status: 'FAILURE', errorMessage: err });
          }
          res.status(200).send({ status: 'SUCCESS', goodDeal: goodDealAdded });
        });
      });
    }); // put /add

    goodDealRouter.put('/toggleInterested', (req, res) => {
      const { idGoodDeal } = req.body;

      GoodDeal.findById(idGoodDeal, (err, goodDeal) => {
        if (err) console.log(err);

        const indexUserInterested = goodDeal.interested.findIndex(
          ({ _id }) => _id.toString() === req.user._id.toString()
        );

        if (indexUserInterested > -1) {
          goodDeal.interested.splice(indexUserInterested, 1);
        } else {
          goodDeal.interested.push(req.user._id);
        }

        goodDeal.save((err, goodDeal) => {
          if (err) {
            console.log('err', err);
            return res.status(400).send({ status: 'FAILURE', errorMessage: err });
          }

          goodDeal.populate(populateFields, (err, goodDeal) => {
            if (err) {
              console.log(err);
              return res.status(400).send({ status: 'FAILURE', errorMessage: err });
            }
            res.status(200).send({ status: 'SUCCESS', goodDeal });
          });
        });
      });
    });
  } // end routes()

  init() {
    this.routes();
    return goodDealRouter;
  }
}

module.exports = GoodDealRouterClass;
